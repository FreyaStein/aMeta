name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint workflow
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .
        snakefile: workflow/Snakefile
        args: "--lint"

  Testing:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: Linting
    strategy:
      matrix:
        python-version: [3.9]
    defaults:
      run:
        shell: bash -l {0}  # a login shell is required for conda activation
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Create conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        channels: conda-forge,bioconda,default
        python-version: ${{ matrix.python-version }}

    - name: Install python2
      run: |
        sudo apt-get update
        sudo apt-get install python2

    - name: Install snakemake
      run: mamba install snakemake numpy

    - name: cache-conda
      uses: actions/cache@v2
      env:
        CACHE_NUMBER: 3
      with:
        path: .test/.snakemake/conda
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('workflow/envs/*.yaml') }}
      id: cache

    - name: Install workflow environments
      if: steps.cache-conda.outputs.cache-hit != 'true'
      run: |
        snakemake -d .test -s workflow/Snakefile --use-conda --show-failed-logs -j 2 --conda-cleanup-pkgs cache --conda-create-envs-only

    - name: Build krakenuniq database
      working-directory: .test
      run: |
        env=$(grep krakenuniq .snakemake/conda/*yaml | awk '{print $1}' | sed -e "s/.yaml://g")
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $env
        krakenuniq-build --db resources/KrakenUniq_DB --kmer-len 21 --minimizer-len 11 --jellyfish-bin $(pwd)/$env/bin/jellyfish
        conda deactivate

    - name: Build krona taxonomy
      working-directory: .test
      run: |
        env=$(grep krona .snakemake/conda/*yaml | awk '{print $1}' | sed -e "s/.yaml://g")
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $env
        cd $env/opt/krona
        sudo ./updateTaxonomy.sh taxonomy
        conda deactivate

    - name: Adjust malt maximum memory usage
      working-directory: .test
      run: |
        env=$(grep hops .snakemake/conda/*yaml | awk '{print $1}' | sed -e "s/.yaml://g")
        source /usr/share/miniconda/etc/profile.d/conda.sh
        conda activate $env
        version=$(conda list malt --json | grep version | sed -e "s/\"//g" | awk '{print $2}')
        cd $env/opt/malt-$version
        sudo sed -i -e "s/-Xmx64G/-Xmx3G/" malt-build.vmoptions
        sudo sed -i -e "s/-Xmx64G/-Xmx3G/" malt-run.vmoptions
        conda deactivate

    - name: Test workflow (local test data)
      run: |
        snakemake -d .test -s workflow Snakefile --use-conda --show-failed-logs -j 2 --use-conda -p

    - name: Test report
      run: |
        snakemake -d .test -s workflow/Snakefile --report report.zip
